{
	"info": {
		"_postman_id": "78eb728a-890c-6cc5-1036-fcd8f46a2243",
		"name": "Rest Api Slim PHP",
		"description": "[Example of REST API](https://github.com/maurobonfietti/rest-api-slim-php) with Slim PHP micro framework.\n\nThis simple RESTful API made in Slim version 3, allows CRUD operations to manage entities like: Users, Tasks and Notes :-)\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Info",
			"item": [
				{
					"name": "Get Help",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body matches success\"] = responseBody.has(\"success\");",
									"tests[\"Body matches message\"] = responseBody.has(\"message\");",
									"tests[\"Body matches help\"] = responseBody.has(\"help\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain-api-rest-slimphp}}",
							"host": [
								"{{domain-api-rest-slimphp}}"
							]
						},
						"description": "Get help about this api."
					},
					"response": [
						{
							"name": "Get Help",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain-api-rest-slimphp}}",
									"host": [
										"{{domain-api-rest-slimphp}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8080"
								},
								{
									"key": "Date",
									"value": "Tue, 18 Jun 2019 22:39:02 +0000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.3.4"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Length",
									"value": "463"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"status\": \"success\",\n    \"message\": {\n        \"endpoints\": {\n            \"tasks\": \"http://localhost:8080/api/v1/tasks\",\n            \"users\": \"http://localhost:8080/api/v1/users\",\n            \"notes\": \"http://localhost:8080/api/v1/notes\",\n            \"status\": \"http://localhost:8080/status\",\n            \"this help\": \"http://localhost:8080\"\n        },\n        \"version\": \"0.22.2\",\n        \"timestamp\": 1560897542\n    }\n}"
						}
					]
				},
				{
					"name": "Get Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b73cea97-407f-4cd1-8941-dfe2fe7f7a74",
								"exec": [
									"tests[\"Response time is less than 250ms\"] = responseTime < 250;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body matches success\"] = responseBody.has(\"success\");",
									"tests[\"Body matches message\"] = responseBody.has(\"message\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/status",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"status"
							]
						},
						"description": "Get status of this api."
					},
					"response": [
						{
							"name": "Get Status",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain-api-rest-slimphp}}/status",
									"host": [
										"{{domain-api-rest-slimphp}}"
									],
									"path": [
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8080"
								},
								{
									"key": "Date",
									"value": "Tue, 18 Jun 2019 22:39:39 +0000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.3.4"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Length",
									"value": "228"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"status\": \"success\",\n    \"message\": {\n        \"db\": {\n            \"users\": 9,\n            \"tasks\": 10,\n            \"notes\": 5\n        },\n        \"version\": \"0.22.2\",\n        \"timestamp\": 1560897579\n    }\n}"
						}
					]
				}
			],
			"description": "Get information about API.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbed56e5-73f5-484c-8019-7b7f8de73c15",
								"exec": [
									"tests[\"Response time is less than 250ms\"] = responseTime < 250;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body matches success\"] = responseBody.has(\"success\");",
									"tests[\"Body matches message\"] = responseBody.has(\"message\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"super.email@host.com\",\n    \"password\": \"OnePass1\"\n}"
						},
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/login",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"login"
							]
						},
						"description": "Login and get a JWT Token Authorization Bearer to use this api."
					},
					"response": [
						{
							"name": "Login Failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"myuser@mail.com\",\n    \"password\": \"IDontKnow\"\n}"
								},
								"url": {
									"raw": "{{domain-api-rest-slimphp}}/login",
									"host": [
										"{{domain-api-rest-slimphp}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8080"
								},
								{
									"key": "Date",
									"value": "Wed, 22 May 2019 19:25:28 +0000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.3.4"
								},
								{
									"key": "Content-type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "133"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Login failed: Email or password incorrect.\",\n    \"class\": \"UserException\",\n    \"status\": \"error\",\n    \"code\": 400\n}"
						},
						{
							"name": "Login OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"m@b.com.ar\",\n    \"password\": \"123\"\n}"
								},
								"url": {
									"raw": "{{domain-api-rest-slimphp}}/login",
									"host": [
										"{{domain-api-rest-slimphp}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8080"
								},
								{
									"key": "Date",
									"value": "Wed, 22 May 2019 19:24:12 +0000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.3.4"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Length",
									"value": "291"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 200,\n    \"status\": \"success\",\n    \"message\": {\n        \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMSIsImVtYWlsIjoibUBiLmNvbS5hciIsIm5hbWUiOiJNTkIiLCJpYXQiOjE1NTg1NTMwNTIsImV4cCI6MTU1OTE1Nzg1Mn0.OQyICWlGW0oSUB-ANrYL2OJTdC2v0OQQO3RQQ3W_KLo\"\n    }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b14c0382-9875-4a65-afd5-7c598598f9a8",
								"exec": [
									"tests[\"Response time is less than 250ms\"] = responseTime < 250;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body matches success\"] = responseBody.has(\"success\");",
									"tests[\"Body matches message\"] = responseBody.has(\"message\");",
									"tests[\"Body matches user\"] = responseBody.has(\"name\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{jwt}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/api/v1/users?page=1&name=&email=&perPage=10",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "name",
									"value": ""
								},
								{
									"key": "email",
									"value": ""
								},
								{
									"key": "perPage",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get One User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "288fa75c-ac90-4bf1-81b6-543011be275f",
								"exec": [
									"tests[\"Response time is less than 250ms\"] = responseTime < 250;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body matches success\"] = responseBody.has(\"success\");",
									"tests[\"Body matches message\"] = responseBody.has(\"message\");",
									"tests[\"Body matches user\"] = responseBody.has(\"name\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{jwt}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/api/v1/users/8",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64d18093-0d32-4e6e-9d47-fcf14c53e5a4",
								"exec": [
									"tests[\"Response time is less than 250ms\"] = responseTime < 250;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"Created\");",
									"tests[\"Body matches success\"] = responseBody.has(\"success\");",
									"tests[\"Body matches message\"] = responseBody.has(\"message\");",
									"tests[\"Body matches user\"] = responseBody.has(\"name\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John User\",\n  \"email\": \"super.email@host.com\",\n  \"password\": \"OnePass1\"\n}"
						},
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/api/v1/users",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "Register a new user."
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7766da2d-190b-49e5-8fc6-615095b7cf3e",
								"exec": [
									"tests[\"Response time is less than 250ms\"] = responseTime < 250;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body matches success\"] = responseBody.has(\"success\");",
									"tests[\"Body matches message\"] = responseBody.has(\"message\");",
									"tests[\"Body matches user\"] = responseBody.has(\"name\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{jwt}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John The User 22\",\n  \"email\": \"super.email@host.com\",\n  \"password\": \"OnePass1\"\n}"
						},
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/api/v1/users/9",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"9"
							]
						},
						"description": "Update a user."
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e476d6d7-27e8-415e-86f4-295ccabcbede",
								"exec": [
									"tests[\"Response time is less than 250ms\"] = responseTime < 250;",
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{jwt}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/api/v1/users/112",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"112"
							]
						},
						"description": "Delete a user."
					},
					"response": []
				}
			],
			"description": "Manage Users.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Get All Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3cca85a2-6941-4e92-b726-6aa996a1a0b9",
								"exec": [
									"tests[\"Response time is less than 250ms\"] = responseTime < 250;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body matches success\"] = responseBody.has(\"success\");",
									"tests[\"Body matches message\"] = responseBody.has(\"message\");",
									"tests[\"Body matches task\"] = responseBody.has(\"name\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{jwt}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/api/v1/tasks?page=1&perPage=5&name=&description=&status=",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"api",
								"v1",
								"tasks"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "perPage",
									"value": "5"
								},
								{
									"key": "name",
									"value": ""
								},
								{
									"key": "description",
									"value": ""
								},
								{
									"key": "status",
									"value": ""
								}
							]
						},
						"description": "Get all tasks of a user."
					},
					"response": []
				},
				{
					"name": "Get One Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e02d461-a4e3-43ff-a701-8950ee0c7b3e",
								"exec": [
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body matches success\"] = responseBody.has(\"success\");",
									"tests[\"Body matches message\"] = responseBody.has(\"message\");",
									"tests[\"Body matches task\"] = responseBody.has(\"name\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{jwt}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/api/v1/tasks/13",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								"13"
							]
						},
						"description": "Get one task of a user."
					},
					"response": []
				},
				{
					"name": "Create Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3cd61a9a-bf8a-47fa-8f0e-722de6a17bae",
								"exec": [
									"tests[\"Response time is less than 250ms\"] = responseTime < 250;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"Created\");",
									"tests[\"Body matches success\"] = responseBody.has(\"success\");",
									"tests[\"Body matches message\"] = responseBody.has(\"message\");",
									"tests[\"Body matches help\"] = responseBody.has(\"name\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Go To Sleep\",\n  \"description\": \"It's too late, go to sleep man ;-)\",\n  \"status\": 0\n}\n"
						},
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/api/v1/tasks",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"api",
								"v1",
								"tasks"
							]
						},
						"description": "Create a task."
					},
					"response": []
				},
				{
					"name": "Update Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b82f1583-87e9-4553-a569-5cbe4f15c6e0",
								"exec": [
									"tests[\"Response time is less than 250ms\"] = responseTime < 250;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body matches success\"] = responseBody.has(\"success\");",
									"tests[\"Body matches message\"] = responseBody.has(\"message\");",
									"tests[\"Body matches task\"] = responseBody.has(\"name\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Go To Sleep NOW!!\",\n  \"description\": \"It's too late, go to sleep man haha...\",\n  \"status\": 1\n}\n"
						},
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/api/v1/tasks/29",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								"29"
							]
						},
						"description": "Update a task of a user."
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b2777e85-76cb-4480-a86f-6b660eafb0bc",
								"exec": [
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{jwt}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/api/v1/tasks/29",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								"29"
							]
						},
						"description": "Delete a task of a user."
					},
					"response": []
				}
			],
			"description": "Manage Tasks.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Notes",
			"item": [
				{
					"name": "Get All Notes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e14b6b6-33dc-4c48-883e-2e4fd6a53b58",
								"exec": [
									"tests[\"Response time is less than 250ms\"] = responseTime < 250;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body matches success\"] = responseBody.has(\"success\");",
									"tests[\"Body matches message\"] = responseBody.has(\"message\");",
									"tests[\"Body matches user\"] = responseBody.has(\"name\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/api/v1/notes?page=1&name=&description=&perPage=10",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"api",
								"v1",
								"notes"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "name",
									"value": ""
								},
								{
									"key": "description",
									"value": ""
								},
								{
									"key": "perPage",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get One Note",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f840dae-5fad-41c6-b00b-e4783239d31f",
								"exec": [
									"tests[\"Response time is less than 250ms\"] = responseTime < 250;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body matches success\"] = responseBody.has(\"success\");",
									"tests[\"Body matches message\"] = responseBody.has(\"message\");",
									"tests[\"Body matches user\"] = responseBody.has(\"name\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/api/v1/notes/3",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"api",
								"v1",
								"notes",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Note",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2a71af4-c56e-43b3-aeea-f651a4c45a98",
								"exec": [
									"tests[\"Response time is less than 250ms\"] = responseTime < 250;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"Created\");",
									"tests[\"Body matches success\"] = responseBody.has(\"success\");",
									"tests[\"Body matches message\"] = responseBody.has(\"message\");",
									"tests[\"Body matches user\"] = responseBody.has(\"name\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"New Soccer Note\",\n  \"description\": \"Magic Goal...\"\n}"
						},
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/api/v1/notes",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"api",
								"v1",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Note",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "625768b8-f6ab-4318-8a95-9516a7933aeb",
								"exec": [
									"tests[\"Response time is less than 250ms\"] = responseTime < 250;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body matches success\"] = responseBody.has(\"success\");",
									"tests[\"Body matches message\"] = responseBody.has(\"message\");",
									"tests[\"Body matches user\"] = responseBody.has(\"name\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"My Note Number 433333\",\n  \"description\": \"Free Note?!?!?!\"\n}"
						},
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/api/v1/notes/4",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"api",
								"v1",
								"notes",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Note",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ddd7e5e1-3adc-41b9-9f7a-e19d61c5572e",
								"exec": [
									"tests[\"Response time is less than 250ms\"] = responseTime < 250;",
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{domain-api-rest-slimphp}}/api/v1/notes/22",
							"host": [
								"{{domain-api-rest-slimphp}}"
							],
							"path": [
								"api",
								"v1",
								"notes",
								"22"
							]
						}
					},
					"response": []
				}
			],
			"description": "Manage Notes.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7901c35c-ee3f-4288-905a-62a86c5d0d9d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "00ab18e8-6925-4bc0-b539-e2afabb506f8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "cf9937b7-72e5-4bd7-b1f4-b80a11d08710",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "da85b75f-b8f7-41b2-a63b-0a9d5aa67da2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}