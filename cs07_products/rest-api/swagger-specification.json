{
  "swagger": "2.0",
  "info": {
    "description": "E-commerce APIs",
    "version": "1.0",
    "title": "REST Services API Documentation",
    "contact": {
      "name": "Abhishek"
    },
    "license": {
      "name": "Apache License Version 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "categories",
      "description": "Supports GET operation"
    },
    {
      "name": "customers",
      "description": "Supports GET, POST, PATCH, PUT, DELETE operations"
    },
    {
      "name": "vendors",
      "description": "Supports GET, POST, PATCH, PUT, DELETE operations"
    }
  ],
  "paths": {
    "/api/v1/categories/": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Lists all the product categories",
        "operationId": "getCategoriesUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CategoryList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/categories/{categoryName}": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Get a category by category name",
        "operationId": "getCategoryByNameUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "categoryName",
            "in": "path",
            "description": "categoryName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/customers": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Lists all the customers",
        "operationId": "getCustomersUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "customers"
        ],
        "summary": "Create a customer",
        "operationId": "createCustomerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customerDTO",
            "description": "customerDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/customers/{customerId}": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Get a customer by id",
        "operationId": "getCustomerByIdUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "customers"
        ],
        "summary": "Replace a customer by new data",
        "operationId": "updateCustomerUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "customerDTO",
            "description": "customerDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "customers"
        ],
        "summary": "Delete a customer",
        "operationId": "deleteCustomerUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "customers"
        ],
        "summary": "Update a customer",
        "operationId": "patchCustomerUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "customerDTO",
            "description": "customerDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/vendors": {
      "get": {
        "tags": [
          "vendors"
        ],
        "summary": "Lists all the vendors",
        "operationId": "getVendorsUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "vendors"
        ],
        "summary": "Create a vendor",
        "operationId": "createVendorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "vendorDTO",
            "description": "vendorDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/vendors/{vendorId}": {
      "get": {
        "tags": [
          "vendors"
        ],
        "summary": "Get a vendor by id",
        "operationId": "getVendorByIdUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "description": "vendorId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "vendors"
        ],
        "summary": "Replace a vendor by new data",
        "operationId": "updateVendorUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "description": "vendorId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "vendorDTO",
            "description": "vendorDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "vendors"
        ],
        "summary": "Delete a vendor",
        "operationId": "deleteVendorUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "description": "vendorId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "vendors"
        ],
        "summary": "Update a vendor",
        "operationId": "patchVendorUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "description": "vendorId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "vendorDTO",
            "description": "vendorDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "required": [
        "categoryName"
      ],
      "properties": {
        "categoryName": {
          "type": "string",
          "description": "Category Name",
          "minLength": 1,
          "maxLength": 255
        }
      },
      "title": "Category",
      "description": "category"
    },
    "CategoryList": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Category"
          }
        }
      },
      "title": "Category List",
      "description": "category list"
    },
    "Customer": {
      "type": "object",
      "required": [
        "firstName",
        "lastName"
      ],
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First Name",
          "minLength": 1,
          "maxLength": 255
        },
        "lastName": {
          "type": "string",
          "description": "Last Name",
          "minLength": 1,
          "maxLength": 255
        },
        "customerUrl": {
          "type": "string",
          "description": "Only available in response",
          "readOnly": true
        }
      },
      "title": "Customer",
      "description": "customer"
    },
    "CustomerList": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Customer"
          }
        }
      },
      "title": "Customer List",
      "description": "customer list"
    },
    "Vendor": {
      "type": "object",
      "required": [
        "vendorName"
      ],
      "properties": {
        "vendorName": {
          "type": "string",
          "description": "Vendor Name",
          "minLength": 1,
          "maxLength": 255
        },
        "vendorUrl": {
          "type": "string",
          "description": "Only available in response",
          "readOnly": true
        }
      },
      "title": "Vendor",
      "description": "vendor"
    },
    "VendorList": {
      "type": "object",
      "properties": {
        "vendors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vendor"
          }
        }
      },
      "title": "Vendor List",
      "description": "vendor list"
    }
  }
}