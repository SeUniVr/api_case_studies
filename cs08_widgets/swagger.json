{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The purpose of this application is to create a backend microservice that: \\\nuses a token to authenticate request, uses Golang, persists data into a SQL database, uses Docker and Swagger.",
    "title": "Widgets SPA API",
    "contact": {
      "name": "Euler Rachid",
      "email": "emrachid@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "host": "localhost:8081",
  "paths": {
    "/users": {
      "get": {
        "description": "Returns a list of all users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "operationId": "handleGetUsers",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Access denied"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Returns an user selected by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "operationId": "handleGetUserById",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of user to be fetch",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid parameter"
          },
          "401": {
            "description": "Access denied"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/widgets": {
      "get": {
        "description": "Returns a list of all widgets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Widgets"
        ],
        "operationId": "handleGetWidgets",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Access denied"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "post": {
        "description": "Creates a new widget and returns the widgets including its new assigned ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Widgets"
        ],
        "operationId": "handlePostWidget",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "x-go-name": "Id",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Color",
            "name": "color",
            "in": "query"
          },
          {
            "type": "number",
            "format": "float",
            "x-go-name": "Price",
            "name": "price",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "uint64",
            "x-go-name": "Inventory",
            "name": "inventory",
            "in": "query"
          },
          {
            "type": "boolean",
            "x-go-name": "Melts",
            "name": "melts",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Access denied"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/widgets/{id}": {
      "get": {
        "description": "Returns an widget selected by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Widgets"
        ],
        "operationId": "handleGetWidgetById",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of widget to be fetch",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid parameter"
          },
          "401": {
            "description": "Access denied"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "put": {
        "description": "Updates an widget selected by its ID and returns it updated",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Widgets"
        ],
        "operationId": "handlePutWidget",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "x-go-name": "Id",
            "description": "ID of widget to be updated",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid parameter"
          },
          "401": {
            "description": "Access denied"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    }
  }
}